<?php
/**
 * Created by PhpStorm.
 * User: peroperje
 * Date: 3.5.16.
 * Time: 07.03
 */

namespace Ezypay\Resource;


use Ezypay\Object\ObjectFactory;
use Ezypay\Result\ResultFactory;

class Resurce
{
    /**
     * @var $connector \driverInterface
     */
    private $connector;
    /**
     * @var string objectType
     */
    private $objectType;


    /**
     * Resurce constructor.
     * @param \driverInterface $connector
     * @param string $defautlObjectType
     */
    protected function __construct(\driverInterface $connector, $defautlObjectType = null){
        $this->connector = $connector;
        if( !empty( $defautlObjectType) ){
            $this->setObjectType($defautlObjectType);
        }
    }

    /**
     * @param array $settings connector settings
     */
    protected function settings(array $settings){
        $this->connector->settings($settings);
    }

    /**
     * @param $objectType object type in result settings
     */
    protected function setObjectType($objectType){
        $this->objectType = $objectType;
    }

    /**
     * @return \result
     */
    protected function result(){
        try
        {
            $res = $this->connector->call();
            $err = $this->connector->getError();
            /**
             * check is exist error
             */
            if( !empty( $err ) ){
                throw new \Exception($err);
            }
            /**
             *  Check is result list
             */
            if(array_key_exists ('data',$res) )
            {
                $objectArray = array_map(array($this,"makeObject"),$res['data']);
                $properties = array(
                    'totalReturned'=>$res['totalReturned'],
                    'totalRecord'=>$res['totalRecord'],
                    'data'=>$objectArray
                );

                return ResultFactory::createObject('ResultList',$properties);

            }
            elseif (array_key_exists ('paymentMethod',$res)) // Subsrciption update has different structure of  result
            {
                $properties = array(
                    'data'=>$this->makeObject($res['paymentMethod'])
                );
                return ResultFactory::createObject('ResultSingle',$properties);
            }else { // result single object
                $properties = array(
                    'data'=>$this->makeObject($res)
                );
                return ResultFactory::createObject('ResultSingle',$properties);
            }


        }catch (\Exception $e){
            return ResultFactory::createObject('ResultError',array(
               'data' => $e->getMessage()
            ));
        }

    }

    /**
     * makeObject
     *
     * @param $data array response array data
     * @return \Ezypay\Object[]
     */
    private function makeObject($data){
        if(!$data)
        {
            return false;
        }
       // return ObjectFactory::createObject('Customer',$data);
        return ObjectFactory::createObject($this->objectType,$data);
    }

}
